# üîêDocumento voltado para camadas de seguran√ßa em php:

## 1. Blindagem contra SQL Injection
- Uso de Prepared Statements (par√¢metros bindados) com PDO ou mysqli
$stmt = $pdo->prepare("SELECT * FROM users WHERE email = ?");
$stmt->execute([$email]);

## 2.M√©todo POST (vs GET)
- Utilizar POST para envio de dados sens√≠veis como:
- Senhas
- Dados pessoais
- Formul√°rios de login, cadastro, altera√ß√£o
- Evitar expor dados na URL (GET), principalmente em links compartilh√°veis.

## 3.Uso de password_hash() e password_verify() (nativo, seguro e atualizado com algoritmos modernos como bcrypt e Argon2).

## 4. Valida√ß√£o e Sanitiza√ß√£o de Dados
- Nunca confiar em dados do usu√°rio.
- Fun√ß√µes √∫teis:
- filter_var() (ex: FILTER_VALIDATE_EMAIL, FILTER_SANITIZE_STRING)
- htmlspecialchars() (XSS)
- intval(), floatval() para for√ßar tipo

## 5. Prote√ß√£o contra XSS (Cross-site Scripting)
- Escapar todas as sa√≠das de dados din√¢micos no HTML:

## 6. Prote√ß√£o contra CSRF (Cross-Site Request Forgery)

## 7. Gerenciamento de Sess√µes Seguro
